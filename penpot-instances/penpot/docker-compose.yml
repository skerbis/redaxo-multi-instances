version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: penpot-penpot-nginx
    restart: always
    ports:
      - "9090:80"
      - "9450:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../../ssl/penpot/cert.crt:/etc/ssl/certs/cert.crt:ro
      - ../../ssl/penpot/private.key:/etc/ssl/private/private.key:ro
    depends_on:
      - penpot-frontend
    networks:
      - penpot-network

  penpot-frontend:
    image: "penpotapp/frontend:latest"
    container_name: penpot-penpot-frontend
    restart: always
    volumes:
      - penpot_assets:/opt/data/assets
    depends_on:
      - penpot-backend
      - penpot-exporter
    networks:
      - penpot-network
    environment:
      - PENPOT_FLAGS=${PENPOT_FLAGS}

  penpot-backend:
    image: "penpotapp/backend:latest"
    container_name: penpot-penpot-backend
    restart: always
    volumes:
      - penpot_assets:/opt/data/assets
    depends_on:
      - penpot-postgres
      - penpot-redis
    networks:
      - penpot-network
    environment:
      - PENPOT_FLAGS=${PENPOT_FLAGS}
      - PENPOT_SECRET_KEY=${PENPOT_SECRET_KEY}
      - PENPOT_DATABASE_URI=${PENPOT_DATABASE_URI}
      - PENPOT_DATABASE_USERNAME=${PENPOT_DATABASE_USERNAME}
      - PENPOT_DATABASE_PASSWORD=${PENPOT_DATABASE_PASSWORD}
      - PENPOT_REDIS_URI=${PENPOT_REDIS_URI}
      - PENPOT_ASSETS_STORAGE_BACKEND=${PENPOT_ASSETS_STORAGE_BACKEND}
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=${PENPOT_STORAGE_ASSETS_FS_DIRECTORY}
      - PENPOT_TELEMETRY_ENABLED=${PENPOT_TELEMETRY_ENABLED}

  penpot-exporter:
    image: "penpotapp/exporter:latest"
    container_name: penpot-penpot-exporter
    restart: always
    networks:
      - penpot-network
    environment:
      - PENPOT_PUBLIC_URI=${PENPOT_PUBLIC_URI}
      - PENPOT_REDIS_URI=${PENPOT_REDIS_URI}

  penpot-postgres:
    image: "postgres:15"
    container_name: penpot-penpot-postgres
    restart: always
    stop_signal: SIGINT
    volumes:
      - penpot_postgres:/var/lib/postgresql/data
    networks:
      - penpot-network
    environment:
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  penpot-redis:
    image: redis:7
    container_name: penpot-penpot-redis
    restart: always
    networks:
      - penpot-network

volumes:
  penpot_postgres:
  penpot_assets:

networks:
  penpot-network:
